{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,uCAQA,MAAMC,EAAa,IAAI,EAAAC,EAAAC,YAEjBC,EAAO,CACXC,KAAMC,SAASC,cAAc,gBAC7BC,MAAOF,SAASC,cAAc,eAC9BE,UAAWH,SAASC,cAAc,eAClCG,QAASJ,SAASC,cAAc,YAChCI,SAAUL,SAASC,cAAc,cAGnCH,EAAKC,KAAKO,iBAAiB,UAM3BC,eAAgCC,GAM9B,GALAC,EAASC,WAAWZ,EAAKO,UACzBG,EAAMG,iBACNhB,EAAWiB,KAAO,EAClBd,EAAKM,QAAQS,UAAY,GAEO,KAA5Bf,EAAKI,MAAMY,MAAMC,OAKnB,OAJAC,EAAAC,GAASC,OAAOC,QACd,6DAEFrB,EAAKI,MAAMY,MAAQ,IAIrBM,EAAe,EAEfzB,EAAW0B,MAAQvB,EAAKI,MAAMY,MAAMC,OAEpC,IACE,MAAMO,KAAEA,SAAe3B,EAAW4B,cAClCC,EAAeF,E,CACf,MAAOG,G,CAIT3B,EAAKI,MAAMY,MAAQ,GACnBL,EAASiB,QAAQ5B,EAAKO,S,IA9BxB,IACIsB,EADAP,EAAe,EAEfQ,EAAa,EA0CjB,SAASJ,EAAeF,GACH,IAAfA,EAAKO,OAAoC,KAArBlC,EAAW0B,OAOX,IAApB1B,EAAWiB,MAAcU,EAAKQ,UAAY,IAC5Cd,EAAAC,GAASC,OAAOa,KAAK,oBAAoBT,EAAKQ,qBAC9CF,EAAaN,EAAKQ,WAGpBnC,EAAWiB,MAAQ,EAqBrB,SAA4BU,GAC1BxB,EAAKM,QAAQ4B,mBAAmB,aAAa,EAAAvC,EAAAwC,SAAkBX,EAAKY,OAEpEd,GAAgBE,EAAKY,KAAKC,M,CAtB1BC,CAAmBd,GAEnBK,EAAgB,IAAIX,EAAAqB,GAAJ,CAAmB,aAAc,CAC/CC,aAAc,MAEhBX,EAAcY,UAEVnB,GAAgB,KAClBJ,EAAAC,GAASC,OAAOa,KACd,+DAtBFf,EAAAC,GAASC,OAAOC,QACd,2E,CAqCN,MAYMV,EAAW,IAAI+B,sBAZOC,IAC1BA,EAAQC,SAAQC,IAEZA,EAAMC,gBACe,KAArBjD,EAAW0B,OACXD,EAAeQ,GAxDrBrB,iBACEoB,EAAckB,UAEd,IACE,MAAMvB,KAAEA,SAAe3B,EAAW4B,cAClCC,EAAeF,E,CACf,MAAOG,G,EAoDLqB,EAAe,GAEjB,GAG2D,CAC7DC,WAAY,UAGdtC,EAASiB,QAAQ5B,EAAKO","sources":["src/js/infinite-scroll.js"],"sourcesContent":["import imageCardTemplate from '../templates/gallery.hbs';\nimport { PixabayAPI } from './pixabay-API';\n\nimport Notiflix from 'notiflix';\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst pixabayApi = new PixabayAPI();\n\nconst refs = {\n  form: document.querySelector('.search-form'),\n  input: document.querySelector('.form-input'),\n  submitBtn: document.querySelector('.search-btn'),\n  gallery: document.querySelector('.gallery'),\n  sentinel: document.querySelector('.sentinel'),\n};\n\nrefs.form.addEventListener('submit', handleSubmitForm);\n\nlet uploadedHits = 0;\nlet modalLightbox;\nlet totalCards = 0;\n\nasync function handleSubmitForm(event) {\n  observer.disconnect(refs.sentinel);\n  event.preventDefault();\n  pixabayApi.page = 1;\n  refs.gallery.innerHTML = '';\n\n  if (refs.input.value.trim() === '') {\n    Notiflix.Notify.failure(\n      'Sorry, your search query is empty. Please try again.'\n    );\n    refs.input.value = '';\n    return;\n  }\n\n  uploadedHits = 0;\n\n  pixabayApi.query = refs.input.value.trim();\n\n  try {\n    const { data } = await pixabayApi.fetchPhotos();\n    onFetchSuccess(data);\n  } catch (error) {\n    onFetchError;\n  }\n\n  refs.input.value = '';\n  observer.observe(refs.sentinel);\n}\n\nasync function loadMoreCards() {\n  modalLightbox.destroy();\n\n  try {\n    const { data } = await pixabayApi.fetchPhotos();\n    onFetchSuccess(data);\n  } catch (error) {\n    onFetchError;\n  }\n}\n\nfunction onFetchSuccess(data) {\n  if (data.total === 0 || pixabayApi.query === '') {\n    Notiflix.Notify.failure(\n      'Sorry, there are no images matching your search query. Please try again.'\n    );\n    return;\n  }\n\n  if (pixabayApi.page === 1 && data.totalHits > 0) {\n    Notiflix.Notify.info(`Hooray! We found ${data.totalHits} images.`);\n    totalCards = data.totalHits;\n  }\n\n  pixabayApi.page += 1;\n\n  renderGalleryCards(data);\n\n  modalLightbox = new SimpleLightbox('.gallery a', {\n    captionDelay: 250,\n  });\n  modalLightbox.refresh();\n\n  if (uploadedHits >= 500) {\n    Notiflix.Notify.info(\n      `We're sorry, but you've reached the end of search results.`\n    );\n    return;\n  }\n}\n\nfunction onFetchError(error) {\n  console.warn(error);\n}\n\nfunction renderGalleryCards(data) {\n  refs.gallery.insertAdjacentHTML('beforeend', imageCardTemplate(data.hits));\n\n  uploadedHits += data.hits.length;\n}\n\nconst intersectionObserve = entries => {\n  entries.forEach(entry => {\n    if (\n      entry.isIntersecting &&\n      pixabayApi.query !== '' &&\n      uploadedHits < totalCards\n    ) {\n      loadMoreCards();\n    }\n  });\n};\n\nconst observer = new IntersectionObserver(intersectionObserve, {\n  rootMargin: '200px',\n});\n\nobserver.observe(refs.sentinel);\n"],"names":["$4TmbC","parcelRequire","$7f13665ecc617d63$var$pixabayApi","$dgPer","PixabayAPI","$7f13665ecc617d63$var$refs","form","document","querySelector","input","submitBtn","gallery","sentinel","addEventListener","async","event","$7f13665ecc617d63$var$observer","disconnect","preventDefault","page","innerHTML","value","trim","$parcel$interopDefault","$7Y9D8","Notify","failure","$7f13665ecc617d63$var$uploadedHits","query","data","fetchPhotos","$7f13665ecc617d63$var$onFetchSuccess","error","observe","$7f13665ecc617d63$var$modalLightbox","$7f13665ecc617d63$var$totalCards","total","totalHits","info","insertAdjacentHTML","default","hits","length","$7f13665ecc617d63$var$renderGalleryCards","$fZKcF","captionDelay","refresh","IntersectionObserver","entries","forEach","entry","isIntersecting","destroy","$7f13665ecc617d63$var$loadMoreCards","rootMargin"],"version":3,"file":"infinite-scroll.1ab51115.js.map"}